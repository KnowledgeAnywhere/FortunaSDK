[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class representing a user",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 26,
                  "offset": 25
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 26,
              "offset": 25
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 26,
          "offset": 25
        }
      }
    },
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "User"
        },
        "name": "User"
      }
    ],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 5,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\models\\user.model.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "typedef",
    "name": "User",
    "type": {
      "type": "NameExpression",
      "name": "User"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "User",
        "kind": "typedef"
      }
    ],
    "namespace": "User"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Token",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 6,
          "offset": 5
        }
      }
    },
    "tags": [
      {
        "title": "typedef",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "Token"
        },
        "name": null
      },
      {
        "title": "param",
        "description": "Response from auth server to serialize into a Token.",
        "lineNumber": 2,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "token"
      },
      {
        "title": "property",
        "description": "Access Token, used to make requests.",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "accessToken"
      },
      {
        "title": "property",
        "description": "Issue date",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "datetime"
        },
        "name": "issued"
      },
      {
        "title": "property",
        "description": "Expiry date",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "datetime"
        },
        "name": "expires"
      },
      {
        "title": "prop",
        "description": "Seconds till expiration.   Epcoch Unix Timestamp",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "int"
        },
        "name": "expiresIn"
      },
      {
        "title": "prop",
        "description": "Type of token.    (Bearer)",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "tokenType"
      },
      {
        "title": "prop",
        "description": "Authorization header content.    Example `Bearer xxxxxxxxx`",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "authorization"
      },
      {
        "title": "prop",
        "description": "Checks to see if the token is \"fresh\"  or expired",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "bool"
        },
        "name": "isValid"
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 64,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\models\\token.model.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "token",
        "lineNumber": 2,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Response from auth server to serialize into a Token.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [
      {
        "title": "property",
        "name": "accessToken",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Access Token, used to make requests.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "issued",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Issue date",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "datetime"
        }
      },
      {
        "title": "property",
        "name": "expires",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Expiry date",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 12,
                      "offset": 11
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 12,
                  "offset": 11
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 12,
              "offset": 11
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "datetime"
        }
      },
      {
        "title": "property",
        "name": "expiresIn",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Seconds till expiration.   Epcoch Unix Timestamp",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "int"
        }
      },
      {
        "title": "property",
        "name": "tokenType",
        "lineNumber": 7,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Type of token.    (Bearer)",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "authorization",
        "lineNumber": 8,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Authorization header content.    Example ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "Bearer xxxxxxxxx",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "property",
        "name": "isValid",
        "lineNumber": 9,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Checks to see if the token is \"fresh\"  or expired",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "bool"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "typedef",
    "type": {
      "type": "NameExpression",
      "name": "Token"
    },
    "name": "Token",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retreives the token",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 20,
                    "offset": 19
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 20,
                "offset": 19
              }
            }
          },
          "tags": [
            {
              "title": "returns",
              "description": "token - Token object",
              "lineNumber": 1,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 32,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 4
              },
              "end": {
                "line": 36,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\models\\token.model.js"
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "token - Token object",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 21,
                        "offset": 20
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 21,
                    "offset": 20
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "get",
          "kind": "function",
          "memberof": "Token",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Token",
              "kind": "typedef"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Token#get"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Token",
        "kind": "typedef"
      }
    ],
    "namespace": "Token"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": ".   This module is available for use and is used by all other modules to call the API in a consistent way and handles authentication.    Use the methods to manually make a request to the API.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 192,
                  "offset": 191
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 192,
              "offset": 191
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 192,
          "offset": 191
        }
      }
    },
    "tags": [
      {
        "title": "description",
        "description": ".   This module is available for use and is used by all other modules to call the API in a consistent way and handles authentication.    Use the methods to manually make a request to the API.",
        "lineNumber": 1
      }
    ],
    "loc": {
      "start": {
        "line": 12,
        "column": 0
      },
      "end": {
        "line": 14,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 170,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "FortunaAPI",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Performs a GET request.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 24,
                        "offset": 23
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 24,
                    "offset": 23
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 24,
                "offset": 23
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Performs a GET request.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "to be called.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            },
            {
              "title": "returns",
              "description": "JSON payload returned from the API",
              "lineNumber": 3,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 26,
                "column": 4
              },
              "end": {
                "line": 46,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "endpoint",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "to be called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "JSON payload returned from the API",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "get",
          "kind": "function",
          "memberof": "FortunaAPI",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FortunaAPI",
              "kind": "class"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FortunaAPI#get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Performs a POST request.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 25,
                        "offset": 24
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 25,
                    "offset": 24
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 25,
                "offset": 24
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Performs a POST request.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "to be called.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            },
            {
              "title": "param",
              "description": "data to be sent to the server",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "object"
              },
              "name": "JSON"
            },
            {
              "title": "returns",
              "description": "JSON payload returned from the API",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 54,
                "column": 4
              },
              "end": {
                "line": 76,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "endpoint",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "to be called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "data",
              "lineNumber": 54
            },
            {
              "title": "param",
              "name": "JSON",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "data to be sent to the server",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "JSON payload returned from the API",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "post",
          "kind": "function",
          "memberof": "FortunaAPI",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FortunaAPI",
              "kind": "class"
            },
            {
              "name": "post",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FortunaAPI#post"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Performs a PUT request.   You can also send in a blank object and append a path param to the endpoint.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 103,
                        "offset": 102
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 103,
                    "offset": 102
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 103,
                "offset": 102
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Performs a PUT request.   You can also send in a blank object and append a path param to the endpoint.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "to be called.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            },
            {
              "title": "param",
              "description": "data to be sent to the server",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "object"
              },
              "name": "JSON"
            },
            {
              "title": "returns",
              "description": "JSON payload returned from the API",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 85,
                "column": 4
              },
              "end": {
                "line": 107,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "endpoint",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "to be called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "data",
              "lineNumber": 85
            },
            {
              "title": "param",
              "name": "JSON",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "data to be sent to the server",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "JSON payload returned from the API",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "put",
          "kind": "function",
          "memberof": "FortunaAPI",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FortunaAPI",
              "kind": "class"
            },
            {
              "name": "put",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FortunaAPI#put"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Performs a DELETE request.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 27,
                    "offset": 26
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 27,
                "offset": 26
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Performs a DELETE request.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "to be called.   Should include the path params or a query string with the resource you intend to delete.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            },
            {
              "title": "returns",
              "description": "JSON payload returned from the API",
              "lineNumber": 3,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            },
            {
              "title": "example",
              "description": "fortuna.$.delete('api/posts/delete/123456');",
              "lineNumber": 4
            }
          ],
          "loc": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 116,
                "column": 4
              },
              "end": {
                "line": 137,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "fortuna.$.delete('api/posts/delete/123456');"
            }
          ],
          "params": [
            {
              "title": "param",
              "name": "endpoint",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "to be called.   Should include the path params or a query string with the resource you intend to delete.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 105,
                            "offset": 104
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 105,
                        "offset": 104
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 105,
                    "offset": 104
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "data",
              "lineNumber": 116
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "JSON payload returned from the API",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "delete",
          "kind": "function",
          "memberof": "FortunaAPI",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FortunaAPI",
              "kind": "class"
            },
            {
              "name": "delete",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FortunaAPI#delete"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FortunaAPI",
        "kind": "class"
      }
    ],
    "namespace": "FortunaAPI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The ping module is a utility class used to determine service availability.   WARNING:  This module may be deprecated or subject to change.\nIt's primary usage at this stage is for testing.   Documentation will most certainly be dropped beyond the initial full release.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 129,
                  "offset": 268
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 129,
              "offset": 268
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 129,
          "offset": 268
        }
      }
    },
    "tags": [
      {
        "title": "module",
        "description": null,
        "lineNumber": 1,
        "type": null,
        "name": "Ping"
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "FortunaAPI"
      },
      {
        "title": "description",
        "description": "The ping module is a utility class used to determine service availability.   WARNING:  This module may be deprecated or subject to change.\r\nIt's primary usage at this stage is for testing.   Documentation will most certainly be dropped beyond the initial full release.",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 11,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 40,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\ping.module.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "FortunaAPI"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "module",
    "name": "Ping",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Checks service health.    If a exception is returned then the service may not be available.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 92,
                        "offset": 91
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 92,
                    "offset": 91
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 92,
                "offset": 91
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Checks service health.    If a exception is returned then the service may not be available.",
              "lineNumber": 1
            },
            {
              "title": "example",
              "description": "fortuna.ping.checkHealth()\r\n               .then(res => {\r\n                 // Server is responding\r\n                 })\r\n               .catch((ex) => console.log(ex));",
              "lineNumber": 2
            },
            {
              "title": "returns",
              "description": "Promise resolves to a string containing a success message",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 30,
                "column": 4
              },
              "end": {
                "line": 39,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\ping.module.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "fortuna.ping.checkHealth()\r\n               .then(res => {\r\n                 // Server is responding\r\n                 })\r\n               .catch((ex) => console.log(ex));"
            }
          ],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Promise resolves to a string containing a success message",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 58,
                            "offset": 57
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 58,
                        "offset": 57
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 58,
                    "offset": 57
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "checkHealth",
          "kind": "function",
          "memberof": "Ping",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Ping",
              "kind": "module"
            },
            {
              "name": "checkHealth",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Ping#checkHealth"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Ping",
        "kind": "module"
      }
    ],
    "namespace": "Ping"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Methods for handling authentication.  Usage of this module may not be needed.   When making calls to the API using other modules in this sdk, authorization is handeled for you.\nThis module is available if you would like to use it to make standard restful calls to the API outside of the SDK.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 115,
                  "offset": 292
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 115,
              "offset": 292
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 115,
          "offset": 292
        }
      }
    },
    "tags": [
      {
        "title": "module",
        "description": null,
        "lineNumber": 1,
        "type": null,
        "name": "Auth"
      },
      {
        "title": "summary",
        "description": "Methods for handling authentication.",
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Methods for handling authentication.  Usage of this module may not be needed.   When making calls to the API using other modules in this sdk, authorization is handeled for you.\r\nThis module is available if you would like to use it to make standard restful calls to the API outside of the SDK.",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 21,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\auth.module.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "module",
    "name": "Auth",
    "summary": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Methods for handling authentication.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 37,
          "offset": 36
        }
      }
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates a new token from the Fortuna API Authorization server and stores it on disk.\nCalling the method will return a promise containing the token.\nSubsequent calls will check the freshness of the token and create a new one if needed.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 3,
                        "column": 87,
                        "offset": 236
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 87,
                    "offset": 236
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 87,
                "offset": 236
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Creates a new token from the Fortuna API Authorization server and stores it on disk.\r\nCalling the method will return a promise containing the token.\r\nSubsequent calls will check the freshness of the token and create a new one if needed.",
              "lineNumber": 1
            },
            {
              "title": "example",
              "description": "fortuna.auth.token()\r\n             .then((token) => {\r\n                   //use token.authorization in a a Authorization header when making a restful API call.\r\n                   })\r\n              .catch((ex) => console.log(ex));",
              "lineNumber": 4
            },
            {
              "title": "returns",
              "description": "Promise resolves to a {@link Token}",
              "lineNumber": 10,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Token"
                  }
                ]
              }
            },
            {
              "title": "see",
              "description": "{@link Token}",
              "lineNumber": 11
            }
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 43,
                "column": 4
              },
              "end": {
                "line": 45,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\auth.module.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "fortuna.auth.token()\r\n             .then((token) => {\r\n                   //use token.authorization in a a Authorization header when making a restful API call.\r\n                   })\r\n              .catch((ex) => console.log(ex));"
            }
          ],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Promise resolves to a ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "link",
                        "url": "Token",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "Token"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "end": {
                            "line": 1,
                            "column": 36,
                            "offset": 35
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Token"
                  }
                ]
              }
            }
          ],
          "sees": [
            {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "url": "Token",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "Token"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            }
          ],
          "throws": [],
          "todos": [],
          "name": "token",
          "kind": "function",
          "memberof": "Auth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Auth",
              "kind": "module"
            },
            {
              "name": "token",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Auth#token"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Auth",
        "kind": "module"
      }
    ],
    "namespace": "Auth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The users module contains functions related to creating, reading, updating and deactivating users.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 99,
                  "offset": 98
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 99,
              "offset": 98
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 99,
          "offset": 98
        }
      }
    },
    "tags": [
      {
        "title": "module",
        "description": null,
        "lineNumber": 1,
        "type": null,
        "name": "Users"
      },
      {
        "title": "extends",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "FortunaAPI"
      },
      {
        "title": "description",
        "description": "The users module contains functions related to creating, reading, updating and deactivating users.",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\users.module.js"
    },
    "augments": [
      {
        "title": "extends",
        "description": null,
        "lineNumber": 2,
        "type": null,
        "name": "FortunaAPI"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "module",
    "name": "Users",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Search for users.   Returns 1000 users at a time.   Use the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "offset",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "end": {
                        "line": 1,
                        "column": 69,
                        "offset": 68
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " parameter to loop through the LMS's entire record set.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 69,
                        "offset": 68
                      },
                      "end": {
                        "line": 1,
                        "column": 124,
                        "offset": 123
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 124,
                    "offset": 123
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 124,
                "offset": 123
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": "Object containing search parameters.   See properties.",
              "lineNumber": 1,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "searchParams"
            },
            {
              "title": "property",
              "description": "Filter users by the date they were created.  Should be a unix timestamp (ms) .   Optional.   Defaults to 0 (midnight 1970, UTC)",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "startdate"
            },
            {
              "title": "property",
              "description": "Filter users by the date they were created.  Should be a unix timestamp (ms) .   Optional.   Defaults to the current  UTC time. (same as calling `new Date().getTime()`)",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "enddate"
            },
            {
              "title": "property",
              "description": "  Filters users by their `externalId`",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "externalIds"
            },
            {
              "title": "property",
              "description": "num of records to offset.     Returns the first 1000 records of the collection by default (`offset: 0`).   A offset of 1000 (`offset: 1000`) will return the next 1000 records.",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "int"
              },
              "name": "offset"
            },
            {
              "title": "returns",
              "description": "Resolves to a promise containing an array of users.",
              "lineNumber": 6,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "User"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 25,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 26,
                "column": 4
              },
              "end": {
                "line": 36,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\users.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "searchParams",
              "lineNumber": 1,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Object containing search parameters.   See properties.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 55,
                            "offset": 54
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 55,
                    "offset": 54
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "properties": [
            {
              "title": "property",
              "name": "startdate",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter users by the date they were created.  Should be a unix timestamp (ms) .   Optional.   Defaults to 0 (midnight 1970, UTC)",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 128,
                            "offset": 127
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 128,
                        "offset": 127
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 128,
                    "offset": 127
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "enddate",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Filter users by the date they were created.  Should be a unix timestamp (ms) .   Optional.   Defaults to the current  UTC time. (same as calling ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 146,
                            "offset": 145
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "new Date().getTime()",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 146,
                            "offset": 145
                          },
                          "end": {
                            "line": 1,
                            "column": 168,
                            "offset": 167
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ")",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 168,
                            "offset": 167
                          },
                          "end": {
                            "line": 1,
                            "column": 169,
                            "offset": 168
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 169,
                        "offset": 168
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 169,
                    "offset": 168
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "externalIds",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "  Filters users by their ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 26,
                            "offset": 25
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "externalId",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 26,
                            "offset": 25
                          },
                          "end": {
                            "line": 1,
                            "column": 38,
                            "offset": 37
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  }
                }
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "offset",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "num of records to offset.     Returns the first 1000 records of the collection by default (",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 92,
                            "offset": 91
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "offset: 0",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 92,
                            "offset": 91
                          },
                          "end": {
                            "line": 1,
                            "column": 103,
                            "offset": 102
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ").   A offset of 1000 (",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 103,
                            "offset": 102
                          },
                          "end": {
                            "line": 1,
                            "column": 126,
                            "offset": 125
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "inlineCode",
                        "value": "offset: 1000",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 126,
                            "offset": 125
                          },
                          "end": {
                            "line": 1,
                            "column": 140,
                            "offset": 139
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "text",
                        "value": ") will return the next 1000 records.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 140,
                            "offset": 139
                          },
                          "end": {
                            "line": 1,
                            "column": 176,
                            "offset": 175
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 176,
                        "offset": 175
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 176,
                    "offset": 175
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "int"
              }
            }
          ],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Resolves to a promise containing an array of users.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 52,
                            "offset": 51
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "User"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "find",
          "kind": "function",
          "memberof": "Users",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Users",
              "kind": "module"
            },
            {
              "name": "find",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Users#find"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Finds a single user by externalId.   Resolves to a promise containing the user.   If a user is not found with the specified externalId a 404 will be returned in the catch block.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 178,
                        "offset": 177
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 178,
                    "offset": 177
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 178,
                "offset": 177
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Finds a single user by externalId.   Resolves to a promise containing the user.   If a user is not found with the specified externalId a 404 will be returned in the catch block.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "externalId of the user to be looked up.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "externalId"
            },
            {
              "title": "example",
              "description": "fortuna.user.findById()\r\n               .then((res) => console.log(user))\r\n               .catch((ex) => console.log(ex));",
              "lineNumber": 3
            },
            {
              "title": "returns",
              "description": "Promise resolves to a object containing the user.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "User"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 48,
                "column": 4
              },
              "end": {
                "line": 56,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\users.module.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "fortuna.user.findById()\r\n               .then((res) => console.log(user))\r\n               .catch((ex) => console.log(ex));"
            }
          ],
          "params": [
            {
              "title": "param",
              "name": "externalId",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "externalId of the user to be looked up.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 40,
                            "offset": 39
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 40,
                        "offset": 39
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 40,
                    "offset": 39
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Promise resolves to a object containing the user.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 50,
                            "offset": 49
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "User"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "findById",
          "kind": "function",
          "memberof": "Users",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Users",
              "kind": "module"
            },
            {
              "name": "findById",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Users#findById"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates a new user.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 20,
                    "offset": 19
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 20,
                "offset": 19
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Creates a new user.",
              "lineNumber": 2
            },
            {
              "title": "param",
              "description": "User object to update.  @see {@link User}",
              "lineNumber": 3,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "object"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "User"
                  }
                ]
              },
              "name": "user"
            },
            {
              "title": "example",
              "description": "fortuna.user.create(user)\r\n            .then(res => {\r\n                 // {\r\n                 //  message: \"USER_PROVISION_SUCCESS\",\r\n                 //  hasWarnings: false,\r\n                 //  warnings: []\r\n                 // }\r\n             })\r\n               .catch((ex) => console.log(ex));",
              "lineNumber": 4
            },
            {
              "title": "returns",
              "description": "Promise resolves to a object.    The warnings array will contain additional info about invalid data.",
              "lineNumber": 14,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 75,
                "column": 4
              },
              "end": {
                "line": 83,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\users.module.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "fortuna.user.create(user)\r\n            .then(res => {\r\n                 // {\r\n                 //  message: \"USER_PROVISION_SUCCESS\",\r\n                 //  hasWarnings: false,\r\n                 //  warnings: []\r\n                 // }\r\n             })\r\n               .catch((ex) => console.log(ex));"
            }
          ],
          "params": [
            {
              "title": "param",
              "name": "user",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "User object to update.  @see ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "link",
                        "url": "User",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "User"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "end": {
                            "line": 1,
                            "column": 42,
                            "offset": 41
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  }
                }
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "object"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "User"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Promise resolves to a object.    The warnings array will contain additional info about invalid data.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 101,
                            "offset": 100
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 101,
                        "offset": 100
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 101,
                    "offset": 100
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "create",
          "kind": "function",
          "memberof": "Users",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Users",
              "kind": "module"
            },
            {
              "name": "create",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Users#create"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update a user. Partial updates are allowed and only the fields passed in will be updated.  Note, updating ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 107,
                        "offset": 106
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "email",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 107,
                        "offset": 106
                      },
                      "end": {
                        "line": 1,
                        "column": 114,
                        "offset": 113
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " and ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 114,
                        "offset": 113
                      },
                      "end": {
                        "line": 1,
                        "column": 119,
                        "offset": 118
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "externalId",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 119,
                        "offset": 118
                      },
                      "end": {
                        "line": 1,
                        "column": 131,
                        "offset": 130
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is not supported at this time.  @see ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 131,
                        "offset": 130
                      },
                      "end": {
                        "line": 1,
                        "column": 169,
                        "offset": 168
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "User",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "User"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 169,
                        "offset": 168
                      },
                      "end": {
                        "line": 1,
                        "column": 181,
                        "offset": 180
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 181,
                    "offset": 180
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 181,
                "offset": 180
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Update a user. Partial updates are allowed and only the fields passed in will be updated.  Note, updating `email` and `externalId` is not supported at this time.  @see {@link User}",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "User object to update.   \r\nfortuna.user.create(user)\r\n            .then(res => {\r\n                 // {\r\n                 //  message: \"USER_UPDATE_SUCCESS\",\r\n                 //  hasWarnings: false,\r\n                 //  warnings: []\r\n                 // }\r\n             })\r\n               .catch((ex) => console.log(ex));",
              "lineNumber": 2,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "object"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "User"
                  }
                ]
              },
              "name": "user"
            },
            {
              "title": "returns",
              "description": "Promise resolves to a object.    The warnings array will contain additional info about invalid data.",
              "lineNumber": 12,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 100,
                "column": 4
              },
              "end": {
                "line": 108,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\users.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "user",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "User object to update.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "break",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "end": {
                            "line": 2,
                            "column": 1,
                            "offset": 27
                          },
                          "indent": [
                            1
                          ]
                        }
                      },
                      {
                        "type": "text",
                        "value": "fortuna.user.create(user)\n            .then(res => {\n                 // {\n                 //  message: \"USER_UPDATE_SUCCESS\",\n                 //  hasWarnings: false,\n                 //  warnings: []\n                 // }\n             })\n               .catch((ex) => console.log(ex));",
                        "position": {
                          "start": {
                            "line": 2,
                            "column": 1,
                            "offset": 27
                          },
                          "end": {
                            "line": 10,
                            "column": 48,
                            "offset": 323
                          },
                          "indent": [
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 10,
                        "column": 48,
                        "offset": 323
                      },
                      "indent": [
                        1,
                        1,
                        1,
                        1,
                        1,
                        1,
                        1,
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 10,
                    "column": 48,
                    "offset": 323
                  }
                }
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "object"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "User"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Promise resolves to a object.    The warnings array will contain additional info about invalid data.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 101,
                            "offset": 100
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 101,
                        "offset": 100
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 101,
                    "offset": 100
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "update",
          "kind": "function",
          "memberof": "Users",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Users",
              "kind": "module"
            },
            {
              "name": "update",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Users#update"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "deactivates a user.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 20,
                    "offset": 19
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 20,
                "offset": 19
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "deactivates a user.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "externalId\r\nfortuna.user.deactivate(externalId)\r\n            .then(res => {\r\n             // user is deactivates    \r\n             }\r\n             })\r\n               .catch((ex) => console.log(ex));",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "strig"
              },
              "name": "user"
            },
            {
              "title": "returns",
              "description": "Promise resolves to a success message.",
              "lineNumber": 9,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 122,
                "column": 4
              },
              "end": {
                "line": 130,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\users.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "externalId",
              "lineNumber": 122
            },
            {
              "title": "param",
              "name": "user",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "externalId\nfortuna.user.deactivate(externalId)\n            .then(res => {\n             // user is deactivates",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 4,
                            "column": 36,
                            "offset": 112
                          },
                          "indent": [
                            1,
                            1,
                            1
                          ]
                        }
                      },
                      {
                        "type": "break",
                        "position": {
                          "start": {
                            "line": 4,
                            "column": 36,
                            "offset": 112
                          },
                          "end": {
                            "line": 5,
                            "column": 1,
                            "offset": 118
                          },
                          "indent": [
                            1
                          ]
                        }
                      },
                      {
                        "type": "text",
                        "value": "             }\n             })\n               .catch((ex) => console.log(ex));",
                        "position": {
                          "start": {
                            "line": 5,
                            "column": 1,
                            "offset": 118
                          },
                          "end": {
                            "line": 7,
                            "column": 48,
                            "offset": 198
                          },
                          "indent": [
                            1,
                            1
                          ]
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 7,
                        "column": 48,
                        "offset": 198
                      },
                      "indent": [
                        1,
                        1,
                        1,
                        1,
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 7,
                    "column": 48,
                    "offset": 198
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "strig"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Promise resolves to a success message.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 39,
                            "offset": 38
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "deactivate",
          "kind": "function",
          "memberof": "Users",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Users",
              "kind": "module"
            },
            {
              "name": "deactivate",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Users#deactivate"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Users",
        "kind": "module"
      }
    ],
    "namespace": "Users"
  }
]