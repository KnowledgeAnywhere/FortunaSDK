[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Top-Level namespace for the Fortuna SDK.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "Fortuna"
      },
      {
        "title": "description",
        "description": "Top-Level namespace for the Fortuna SDK.",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 19
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\index.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "namespace",
    "name": "Fortuna",
    "type": {
      "type": "NameExpression",
      "name": "object"
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The ping module is a utility class used to determine service availability.   WARNING:  This module may be deprecated or subject to change.\nIt's primary usage at this stage is for testing.   Documentation will most certainly be dropped beyond the initial full release.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 129,
                        "offset": 268
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 129,
                    "offset": 268
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 129,
                "offset": 268
              }
            }
          },
          "tags": [
            {
              "title": "module",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "Ping"
            },
            {
              "title": "memberof",
              "description": "Fortuna",
              "lineNumber": 2
            },
            {
              "title": "alias",
              "description": null,
              "lineNumber": 3,
              "name": "fortuna.ping"
            },
            {
              "title": "extends",
              "description": null,
              "lineNumber": 4,
              "type": null,
              "name": "Fortuna"
            },
            {
              "title": "description",
              "description": "The ping module is a utility class used to determine service availability.   WARNING:  This module may be deprecated or subject to change.\r\nIt's primary usage at this stage is for testing.   Documentation will most certainly be dropped beyond the initial full release.",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 38,
                "column": 1
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\ping.module.js"
          },
          "augments": [
            {
              "title": "extends",
              "description": null,
              "lineNumber": 4,
              "type": null,
              "name": "Fortuna"
            }
          ],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "module",
          "name": "Ping",
          "memberof": "Fortuna",
          "alias": "fortuna.ping",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Fortuna",
              "kind": "namespace"
            },
            {
              "name": "Ping",
              "kind": "module"
            }
          ],
          "namespace": "FortunaPing"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The user module is a utility class used to determine service availability.   WARNING:  This module may be deprecated or subject to change.\nIt's primary usage at this stage is for testing.   Documentation will most certainly be dropped beyond the initial full release.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 129,
                        "offset": 268
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 129,
                    "offset": 268
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 129,
                "offset": 268
              }
            }
          },
          "tags": [
            {
              "title": "module",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "User"
            },
            {
              "title": "memberof",
              "description": "Fortuna",
              "lineNumber": 2
            },
            {
              "title": "alias",
              "description": null,
              "lineNumber": 3,
              "name": "fortuna.user"
            },
            {
              "title": "extends",
              "description": null,
              "lineNumber": 4,
              "type": null,
              "name": "Fortuna"
            },
            {
              "title": "description",
              "description": "The user module is a utility class used to determine service availability.   WARNING:  This module may be deprecated or subject to change.\r\nIt's primary usage at this stage is for testing.   Documentation will most certainly be dropped beyond the initial full release.",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 88,
                "column": 1
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\user.module.js"
          },
          "augments": [
            {
              "title": "extends",
              "description": null,
              "lineNumber": 4,
              "type": null,
              "name": "Fortuna"
            }
          ],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "module",
          "name": "User",
          "memberof": "Fortuna",
          "alias": "fortuna.user",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Fortuna",
              "kind": "namespace"
            },
            {
              "name": "User",
              "kind": "module"
            }
          ],
          "namespace": "FortunaUser"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The users module is a utility class used to determine service availability.   WARNING:  This module may be deprecated or subject to change.\nIt's primary usage at this stage is for testing.   Documentation will most certainly be dropped beyond the initial full release.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 129,
                        "offset": 269
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 129,
                    "offset": 269
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 129,
                "offset": 269
              }
            }
          },
          "tags": [
            {
              "title": "module",
              "description": null,
              "lineNumber": 1,
              "type": null,
              "name": "Users"
            },
            {
              "title": "memberof",
              "description": "Fortuna",
              "lineNumber": 2
            },
            {
              "title": "alias",
              "description": null,
              "lineNumber": 3,
              "name": "fortuna.users"
            },
            {
              "title": "extends",
              "description": null,
              "lineNumber": 4,
              "type": null,
              "name": "Fortuna"
            },
            {
              "title": "description",
              "description": "The users module is a utility class used to determine service availability.   WARNING:  This module may be deprecated or subject to change.\r\nIt's primary usage at this stage is for testing.   Documentation will most certainly be dropped beyond the initial full release.",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 28,
                "column": 1
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\users.module.js"
          },
          "augments": [
            {
              "title": "extends",
              "description": null,
              "lineNumber": 4,
              "type": null,
              "name": "Fortuna"
            }
          ],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "kind": "module",
          "name": "Users",
          "memberof": "Fortuna",
          "alias": "fortuna.users",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Fortuna",
              "kind": "namespace"
            },
            {
              "name": "Users",
              "kind": "module"
            }
          ],
          "namespace": "FortunaUsers"
        }
      ]
    },
    "path": [
      {
        "name": "Fortuna",
        "kind": "namespace"
      }
    ],
    "namespace": "Fortuna"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "FortunaAPI",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 11,
          "offset": 10
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 12,
        "column": 0
      },
      "end": {
        "line": 12,
        "column": 17
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 155,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "FortunaAPI",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Performs a GET request.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 24,
                        "offset": 23
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 24,
                    "offset": 23
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 24,
                "offset": 23
              }
            }
          },
          "tags": [
            {
              "title": "memberOf",
              "description": "FortunaAPI",
              "lineNumber": 1
            },
            {
              "title": "description",
              "description": "Performs a GET request.",
              "lineNumber": 2
            },
            {
              "title": "param",
              "description": "to be called.",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            },
            {
              "title": "returns",
              "description": "JSON payload returned from the API",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 25,
                "column": 4
              },
              "end": {
                "line": 46,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "endpoint",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "to be called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "JSON payload returned from the API",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "get",
          "kind": "function",
          "memberof": "FortunaAPI",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FortunaAPI",
              "kind": "class"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FortunaAPI#get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Performs a POST request.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 25,
                        "offset": 24
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 25,
                    "offset": 24
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 25,
                "offset": 24
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Performs a POST request.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "to be called.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            },
            {
              "title": "param",
              "description": "data to be sent to the server",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "object"
              },
              "name": "JSON"
            },
            {
              "title": "returns",
              "description": "JSON payload returned from the API",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 54,
                "column": 4
              },
              "end": {
                "line": 76,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "endpoint",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "to be called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "data",
              "lineNumber": 54
            },
            {
              "title": "param",
              "name": "JSON",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "data to be sent to the server",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "JSON payload returned from the API",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "post",
          "kind": "function",
          "memberof": "FortunaAPI",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FortunaAPI",
              "kind": "class"
            },
            {
              "name": "post",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FortunaAPI#post"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Performs a PUT request.   You can also send in a blank object and append a path param to the endpoint.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 103,
                        "offset": 102
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 103,
                    "offset": 102
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 103,
                "offset": 102
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Performs a PUT request.   You can also send in a blank object and append a path param to the endpoint.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "to be called.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            },
            {
              "title": "param",
              "description": "data to be sent to the server",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "object"
              },
              "name": "JSON"
            },
            {
              "title": "returns",
              "description": "JSON payload returned from the API",
              "lineNumber": 4,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 85,
                "column": 4
              },
              "end": {
                "line": 107,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "endpoint",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "to be called.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 14,
                            "offset": 13
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "data",
              "lineNumber": 85
            },
            {
              "title": "param",
              "name": "JSON",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "data to be sent to the server",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 30,
                            "offset": 29
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "JSON payload returned from the API",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "put",
          "kind": "function",
          "memberof": "FortunaAPI",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FortunaAPI",
              "kind": "class"
            },
            {
              "name": "put",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FortunaAPI#put"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Performs a DELETE request.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 27,
                    "offset": 26
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 27,
                "offset": 26
              }
            }
          },
          "tags": [
            {
              "title": "description",
              "description": "Performs a DELETE request.",
              "lineNumber": 1
            },
            {
              "title": "param",
              "description": "to be called.   Should include the path params or a query string with the resource you intend to delete.",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            },
            {
              "title": "returns",
              "description": "JSON payload returned from the API",
              "lineNumber": 3,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  }
                ]
              }
            },
            {
              "title": "example",
              "description": "fortuna.$.delete('api/posts/delete/123456');",
              "lineNumber": 4
            }
          ],
          "loc": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 116,
                "column": 4
              },
              "end": {
                "line": 137,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\fortuna-api.module.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "fortuna.$.delete('api/posts/delete/123456');"
            }
          ],
          "params": [
            {
              "title": "param",
              "name": "endpoint",
              "lineNumber": 2,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "to be called.   Should include the path params or a query string with the resource you intend to delete.",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 105,
                            "offset": 104
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 105,
                        "offset": 104
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 105,
                    "offset": 104
                  }
                }
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "data",
              "lineNumber": 116
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "JSON payload returned from the API",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 35,
                            "offset": 34
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "delete",
          "kind": "function",
          "memberof": "FortunaAPI",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "FortunaAPI",
              "kind": "class"
            },
            {
              "name": "delete",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "FortunaAPI#delete"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "FortunaAPI",
        "kind": "class"
      }
    ],
    "namespace": "FortunaAPI"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Checks service health.    If a exception is returned then the service may not be available.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 92,
                  "offset": 91
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 92,
              "offset": 91
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 92,
          "offset": 91
        }
      }
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "checkHealth"
      },
      {
        "title": "static",
        "description": null,
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Checks service health.    If a exception is returned then the service may not be available.",
        "lineNumber": 3
      },
      {
        "title": "example",
        "description": "fortuna.ping.checkHealth()\r\n               .then((res) => console.log(res))\r\n               .catch((ex) => console.log(ex));",
        "lineNumber": 4
      },
      {
        "title": "returns",
        "description": "Promise resolves to a string containing a success message",
        "lineNumber": 8,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 17,
        "column": 4
      },
      "end": {
        "line": 26,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 28,
          "column": 4
        },
        "end": {
          "line": 37,
          "column": 5
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\ping.module.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "fortuna.ping.checkHealth()\r\n               .then((res) => console.log(res))\r\n               .catch((ex) => console.log(ex));"
      }
    ],
    "params": [],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Promise resolves to a string containing a success message",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 58,
                      "offset": 57
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 58,
                  "offset": 57
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 58,
              "offset": 57
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "checkHealth",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "checkHealth",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".checkHealth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Methods for handling authentication.  Usage of this module may not be needed.   When making calls to the API using other modules in this sdk, authorization is handeled for you.\nThis module is available if you would like to use it to make standard restful calls to the API outside of the SDK.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 115,
                  "offset": 292
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 115,
              "offset": 292
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 115,
          "offset": 292
        }
      }
    },
    "tags": [
      {
        "title": "summary",
        "description": "Methods for handling authentication.",
        "lineNumber": 1
      },
      {
        "title": "description",
        "description": "Methods for handling authentication.  Usage of this module may not be needed.   When making calls to the API using other modules in this sdk, authorization is handeled for you.\r\nThis module is available if you would like to use it to make standard restful calls to the API outside of the SDK.",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 20,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 127,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\auth.module.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "summary": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Methods for handling authentication.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 37,
          "offset": 36
        }
      }
    },
    "name": "Auth",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates a new token from the Fortuna API Authorization server and stores it on disk.\nCalling the method will return a promise containing the token.\nSubsequent calls will check the freshness of the token and create a new one if needed.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 3,
                        "column": 87,
                        "offset": 236
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 87,
                    "offset": 236
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 87,
                "offset": 236
              }
            }
          },
          "tags": [
            {
              "title": "alias",
              "description": null,
              "lineNumber": 1,
              "name": "fortuna.auth.token"
            },
            {
              "title": "description",
              "description": "Creates a new token from the Fortuna API Authorization server and stores it on disk.\r\nCalling the method will return a promise containing the token.\r\nSubsequent calls will check the freshness of the token and create a new one if needed.",
              "lineNumber": 2
            },
            {
              "title": "example",
              "description": "fortuna.auth.token()\r\n             .then((token) => {\r\n                   //use token.authorization in a a Authorization header when making a restful API call.\r\n                   })\r\n              .catch((ex) => console.log(ex));",
              "lineNumber": 5
            },
            {
              "title": "returns",
              "description": "Promise resolves to a {@link Token}",
              "lineNumber": 11,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Token"
                  }
                ]
              }
            },
            {
              "title": "see",
              "description": "{@link Token}",
              "lineNumber": 12
            }
          ],
          "loc": {
            "start": {
              "line": 24,
              "column": 4
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 39,
                "column": 4
              },
              "end": {
                "line": 41,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\auth.module.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "fortuna.auth.token()\r\n             .then((token) => {\r\n                   //use token.authorization in a a Authorization header when making a restful API call.\r\n                   })\r\n              .catch((ex) => console.log(ex));"
            }
          ],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Promise resolves to a ",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "indent": []
                        }
                      },
                      {
                        "type": "link",
                        "url": "Token",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "Token"
                          }
                        ],
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 23,
                            "offset": 22
                          },
                          "end": {
                            "line": 1,
                            "column": 36,
                            "offset": 35
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Promise"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Token"
                  }
                ]
              }
            }
          ],
          "sees": [
            {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "url": "Token",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "Token"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 14,
                          "offset": 13
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                }
              }
            }
          ],
          "throws": [],
          "todos": [],
          "alias": "fortuna.auth.token",
          "name": "fortuna.auth.token",
          "kind": "function",
          "memberof": "Auth",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Auth",
              "kind": "class"
            },
            {
              "name": "fortuna.auth.token",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Auth#fortuna.auth.token"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Auth",
        "kind": "class"
      }
    ],
    "namespace": "Auth"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Token",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 6,
                  "offset": 5
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 6,
              "offset": 5
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 6,
          "offset": 5
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Response from auth server.",
        "lineNumber": 1,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "token"
      },
      {
        "title": "property",
        "description": "{string} - Access Token, used to make requests.",
        "lineNumber": 2,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "accessToken"
      },
      {
        "title": "property",
        "description": "{datetime} - Issue date",
        "lineNumber": 3,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "issued"
      },
      {
        "title": "property",
        "description": "{datetime} - Expiry date",
        "lineNumber": 4,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "expires"
      },
      {
        "title": "prop",
        "description": "{int} - Seconds till expiration.",
        "lineNumber": 5,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "expiresIn"
      },
      {
        "title": "prop",
        "description": "{string} - Type of token.    (Bearer)",
        "lineNumber": 6,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "tokenType"
      },
      {
        "title": "prop",
        "description": "{string} - Authorization header content.    Example `Bearer xxxxxxxxx`",
        "lineNumber": 7,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "authorization"
      },
      {
        "title": "prop",
        "description": "{bool} - Checks to see if the token is \"fresh\"  or expired",
        "lineNumber": 8,
        "type": null,
        "errors": [
          "Missing or invalid tag type"
        ],
        "name": "isValid"
      }
    ],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 14,
        "column": 10
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 1
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\models\\token.model.js"
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "token",
        "lineNumber": 1,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Response from auth server.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Token",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retreives the token",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 20,
                    "offset": 19
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 20,
                "offset": 19
              }
            }
          },
          "tags": [
            {
              "title": "returns",
              "description": "token - Token object",
              "lineNumber": 1,
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 33,
                "column": 4
              },
              "end": {
                "line": 35,
                "column": 5
              }
            },
            "file": "C:\\_dev\\FortunaSDK\\lib\\models\\token.model.js"
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "token - Token object",
                        "position": {
                          "start": {
                            "line": 1,
                            "column": 1,
                            "offset": 0
                          },
                          "end": {
                            "line": 1,
                            "column": 21,
                            "offset": 20
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 21,
                        "offset": 20
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 21,
                    "offset": 20
                  }
                }
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "get",
          "kind": "function",
          "memberof": "Token",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Token",
              "kind": "class"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Token#get"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Token",
        "kind": "class"
      }
    ],
    "namespace": "Token"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Finds a single user by externalId.   Resolves to a promise containing the user.   If a user is not found with the specified externalId a 404 will be returned in the catch block.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 178,
                  "offset": 177
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 178,
              "offset": 177
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 178,
          "offset": 177
        }
      }
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "findById"
      },
      {
        "title": "static",
        "description": null,
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Finds a single user by externalId.   Resolves to a promise containing the user.   If a user is not found with the specified externalId a 404 will be returned in the catch block.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "externalId of the user to be looked up.",
        "lineNumber": 4,
        "type": null,
        "name": "externalId"
      },
      {
        "title": "example",
        "description": "fortuna.user.findById()\r\n               .then((res) => console.log(user))\r\n               .catch((ex) => console.log(ex));",
        "lineNumber": 5
      },
      {
        "title": "returns",
        "description": "Promise resolves to a object containing the user.",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "User"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 17,
        "column": 4
      },
      "end": {
        "line": 27,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 29,
          "column": 4
        },
        "end": {
          "line": 37,
          "column": 5
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\user.module.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "fortuna.user.findById()\r\n               .then((res) => console.log(user))\r\n               .catch((ex) => console.log(ex));"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "externalId",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "externalId of the user to be looked up.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Promise resolves to a object containing the user.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 50,
                      "offset": 49
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 50,
                  "offset": 49
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 50,
              "offset": 49
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "User"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "findById",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "findById",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".findById"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Creates a new user.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 20,
          "offset": 19
        }
      }
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "create"
      },
      {
        "title": "static",
        "description": null,
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Creates a new user.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "{object<User>} - User object to update.",
        "lineNumber": 4,
        "type": null,
        "name": "user"
      },
      {
        "title": "example",
        "description": "fortuna.user.create()\r\n               .then((res) => console.log(res))\r\n               .catch((ex) => console.log(ex));",
        "lineNumber": 5
      },
      {
        "title": "returns",
        "description": "Promise resolves to a string with a success message.",
        "lineNumber": 9,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 39,
        "column": 4
      },
      "end": {
        "line": 49,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 51,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 5
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\user.module.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "fortuna.user.create()\r\n               .then((res) => console.log(res))\r\n               .catch((ex) => console.log(ex));"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "user",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "{object",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<User>",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "} - User object to update.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "end": {
                      "line": 1,
                      "column": 40,
                      "offset": 39
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 40,
              "offset": 39
            }
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Promise resolves to a string with a success message.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "create",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "create",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".create"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Update a user.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 15,
          "offset": 14
        }
      }
    },
    "tags": [
      {
        "title": "method",
        "description": null,
        "lineNumber": 1,
        "name": "update"
      },
      {
        "title": "static",
        "description": null,
        "lineNumber": 2
      },
      {
        "title": "description",
        "description": "Update a user.",
        "lineNumber": 3
      },
      {
        "title": "param",
        "description": "{object<User>} - User object to update.   Partial updates are allowed and only the fields passed in will be updated.",
        "lineNumber": 4,
        "type": null,
        "name": "user"
      },
      {
        "title": "example",
        "description": "var user = {\r\n externalId: dd8e8d7djd88d3djz304,\r\n firstName: Elle\r\n lastName: Wilson\r\n email: elle.wilson@knowledgeanywhere.com\r\n};\r\nfortuna.user.update(user)\r\n               .then((res) => console.log(res))\r\n               .catch((ex) => console.log(ex));",
        "lineNumber": 5
      },
      {
        "title": "returns",
        "description": "Promise resolves to a string with a success message.",
        "lineNumber": 15,
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "loc": {
      "start": {
        "line": 61,
        "column": 4
      },
      "end": {
        "line": 77,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 5
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\user.module.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "var user = {\r\n externalId: dd8e8d7djd88d3djz304,\r\n firstName: Elle\r\n lastName: Wilson\r\n email: elle.wilson@knowledgeanywhere.com\r\n};\r\nfortuna.user.update(user)\r\n               .then((res) => console.log(res))\r\n               .catch((ex) => console.log(ex));"
      }
    ],
    "params": [
      {
        "title": "param",
        "name": "user",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "{object",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "indent": []
                  }
                },
                {
                  "type": "html",
                  "value": "<User>",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 8,
                      "offset": 7
                    },
                    "end": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": "} - User object to update.   Partial updates are allowed and only the fields passed in will be updated.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 14,
                      "offset": 13
                    },
                    "end": {
                      "line": 1,
                      "column": 117,
                      "offset": 116
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 117,
                  "offset": 116
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 117,
              "offset": 116
            }
          }
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Promise resolves to a string with a success message.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "title": "returns",
        "type": {
          "type": "TypeApplication",
          "expression": {
            "type": "NameExpression",
            "name": "Promise"
          },
          "applications": [
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "kind": "function",
    "name": "update",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "update",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".update"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "find users",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 11,
          "offset": 10
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 17,
        "column": 4
      },
      "end": {
        "line": 17,
        "column": 21
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 18,
          "column": 4
        },
        "end": {
          "line": 27,
          "column": 5
        }
      },
      "file": "C:\\_dev\\FortunaSDK\\lib\\modules\\users.module.js"
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "find",
    "kind": "function",
    "memberof": "Users",
    "scope": "static",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "find",
        "kind": "function",
        "scope": "static"
      }
    ],
    "namespace": ".find"
  }
]